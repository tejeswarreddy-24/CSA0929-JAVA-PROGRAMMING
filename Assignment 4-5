public class MultiplicationTable implements Runnable {
    private int number;

    public MultiplicationTable(int number) {
        this.number = number;
    }

    @Override
    public void run() {
        System.out.println("Thread " + Thread.currentThread().getId() + " is running.");
        System.out.println("Multiplication table for " + number + ":");

        for (int i = 1; i <= 10; i++) {
            System.out.println(number + " * " + i + " = " + (number * i));
            try {
                Thread.sleep(500); 
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }

        System.out.println("Thread " + Thread.currentThread().getId() + " has finished.");
    }

    public static void main(String[] args) {
        System.out.println("Main thread is running.");

        MultiplicationTable table5 = new MultiplicationTable(5);
        Thread thread5 = new Thread(table5);
        
        MultiplicationTable table10 = new MultiplicationTable(10);
        Thread thread10 = new Thread(table10);

        thread5.start();
        thread10.start();

        try {
            thread5.join(); 
            thread10.join();  
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        System.out.println("Main thread has finished.");
    }
}
